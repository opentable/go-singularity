{
  "apiVersion" : "0.14.1",
  "swaggerVersion" : "1.2",
  "basePath" : null,
  "resourcePath" : "/api/tasks",
  "produces" : [ "application/json" ],
  "apis" : [ {
    "path" : "/api/tasks/scheduled",
    "operations" : [ {
      "method" : "GET",
      "summary" : "Retrieve list of scheduled tasks.",
      "notes" : "",
      "type" : "array",
      "items" : {
        "$ref" : "SingularityTaskRequest"
      },
      "nickname" : "getScheduledTasks",
      "parameters" : [ ]
    } ]
  }, {
    "path" : "/api/tasks/scheduled/ids",
    "operations" : [ {
      "method" : "GET",
      "summary" : "Retrieve list of scheduled task IDs.",
      "notes" : "",
      "items" : {
        "$ref" : "SingularityPendingTaskId"
      },
      "nickname" : "getScheduledTaskIds",
      "parameters" : [ ]
    } ]
  }, {
    "path" : "/api/tasks/scheduled/task/{pendingTaskId}",
    "operations" : [ {
      "method" : "GET",
      "summary" : "Retrieve information about a pending task.",
      "notes" : "",
      "type" : "SingularityTaskRequest",
      "nickname" : "getPendingTask",
      "parameters" : [ {
        "name" : "pendingTaskId",
        "required" : true,
        "type" : "string",
        "paramType" : "path",
        "allowMultiple" : false
      } ]
    } ]
  }, {
    "path" : "/api/tasks/scheduled/request/{requestId}",
    "operations" : [ {
      "method" : "GET",
      "summary" : "Retrieve list of scheduled tasks for a specific request.",
      "notes" : "",
      "type" : "array",
      "items" : {
        "$ref" : "SingularityTaskRequest"
      },
      "nickname" : "getScheduledTasksForRequest",
      "parameters" : [ {
        "name" : "requestId",
        "required" : true,
        "type" : "string",
        "paramType" : "path",
        "allowMultiple" : false
      } ]
    } ]
  }, {
    "path" : "/api/tasks/active/slave/{slaveId}",
    "operations" : [ {
      "method" : "GET",
      "summary" : "Retrieve list of active tasks on a specific slave.",
      "notes" : "",
      "items" : {
        "$ref" : "SingularityTask"
      },
      "nickname" : "getTasksForSlave",
      "parameters" : [ {
        "name" : "slaveId",
        "required" : true,
        "type" : "string",
        "paramType" : "path",
        "allowMultiple" : false
      } ]
    } ]
  }, {
    "path" : "/api/tasks/active",
    "operations" : [ {
      "method" : "GET",
      "summary" : "Retrieve the list of active tasks.",
      "notes" : "",
      "items" : {
        "$ref" : "SingularityTask"
      },
      "nickname" : "getActiveTasks",
      "parameters" : [ ]
    } ]
  }, {
    "path" : "/api/tasks/cleaning",
    "operations" : [ {
      "method" : "GET",
      "summary" : "Retrieve the list of cleaning tasks.",
      "notes" : "",
      "items" : {
        "$ref" : "SingularityTaskCleanup"
      },
      "nickname" : "getCleaningTasks",
      "parameters" : [ ]
    } ]
  }, {
    "path" : "/api/tasks/killed",
    "operations" : [ {
      "method" : "GET",
      "summary" : "Retrieve the list of killed tasks.",
      "notes" : "",
      "items" : {
        "$ref" : "SingularityKilledTaskIdRecord"
      },
      "nickname" : "getKilledTasks",
      "parameters" : [ ]
    } ]
  }, {
    "path" : "/api/tasks/lbcleanup",
    "operations" : [ {
      "method" : "GET",
      "summary" : "Retrieve the list of tasks being cleaned from load balancers.",
      "notes" : "",
      "items" : {
        "$ref" : "SingularityTaskId"
      },
      "nickname" : "getLbCleanupTasks",
      "parameters" : [ ]
    } ]
  }, {
    "path" : "/api/tasks/task/{taskId}",
    "operations" : [ {
      "method" : "GET",
      "summary" : "Retrieve information about a specific active task.",
      "notes" : "",
      "type" : "SingularityTask",
      "nickname" : "getActiveTask",
      "parameters" : [ {
        "name" : "taskId",
        "required" : true,
        "type" : "string",
        "paramType" : "path",
        "allowMultiple" : false
      } ]
    }, {
      "method" : "DELETE",
      "summary" : "Attempt to kill task, optionally overriding an existing cleanup request (that may be waiting for replacement tasks to become healthy)",
      "notes" : "",
      "type" : "SingularityTaskCleanup",
      "nickname" : "killTask",
      "consumes" : [ "application/json" ],
      "parameters" : [ {
        "name" : "taskId",
        "required" : true,
        "type" : "string",
        "paramType" : "path",
        "allowMultiple" : false
      }, {
        "name" : "body",
        "required" : false,
        "type" : "SingularityKillTaskRequest",
        "paramType" : "body",
        "allowMultiple" : false
      } ],
      "responseMessages" : [ {
        "code" : 409,
        "message" : "Task already has a cleanup request (can be overridden with override=true)"
      } ]
    } ]
  }, {
    "path" : "/api/tasks/task/{taskId}/statistics",
    "operations" : [ {
      "method" : "GET",
      "summary" : "Retrieve statistics about a specific active task.",
      "notes" : "",
      "type" : "MesosTaskStatisticsObject",
      "nickname" : "getTaskStatistics",
      "parameters" : [ {
        "name" : "taskId",
        "required" : true,
        "type" : "string",
        "paramType" : "path",
        "allowMultiple" : false
      } ]
    } ]
  }, {
    "path" : "/api/tasks/task/{taskId}/cleanup",
    "operations" : [ {
      "method" : "GET",
      "summary" : "Get the cleanup object for the task, if it exists",
      "notes" : "",
      "type" : "SingularityTaskCleanup",
      "nickname" : "getTaskCleanup",
      "parameters" : [ {
        "name" : "taskId",
        "required" : true,
        "type" : "string",
        "paramType" : "path",
        "allowMultiple" : false
      } ]
    } ]
  }, {
    "path" : "/api/tasks/task/{taskId}/metadata",
    "operations" : [ {
      "method" : "POST",
      "summary" : "Post metadata about a task that will be persisted along with it and displayed in the UI",
      "notes" : "",
      "type" : "void",
      "nickname" : "postTaskMetadata",
      "consumes" : [ "application/json" ],
      "parameters" : [ {
        "name" : "taskId",
        "required" : true,
        "type" : "string",
        "paramType" : "path",
        "allowMultiple" : false
      }, {
        "name" : "body",
        "required" : false,
        "type" : "SingularityTaskMetadataRequest",
        "paramType" : "body",
        "allowMultiple" : false
      } ],
      "responseMessages" : [ {
        "code" : 400,
        "message" : "Invalid metadata object or doesn't match allowed types"
      }, {
        "code" : 404,
        "message" : "Task doesn't exist"
      }, {
        "code" : 409,
        "message" : "Metadata with this type/timestamp already existed"
      } ]
    } ]
  }, {
    "path" : "/api/tasks/task/{taskId}/command",
    "operations" : [ {
      "method" : "POST",
      "summary" : "Run a configured shell command against the given task",
      "notes" : "",
      "type" : "SingularityTaskShellCommandRequest",
      "nickname" : "runShellCommand",
      "consumes" : [ "application/json" ],
      "parameters" : [ {
        "name" : "taskId",
        "required" : true,
        "type" : "string",
        "paramType" : "path",
        "allowMultiple" : false
      }, {
        "name" : "body",
        "required" : false,
        "type" : "SingularityShellCommand",
        "paramType" : "body",
        "allowMultiple" : false
      } ],
      "responseMessages" : [ {
        "code" : 400,
        "message" : "Given shell command option doesn't exist"
      }, {
        "code" : 403,
        "message" : "Given shell command doesn't exist"
      } ]
    } ]
  } ],
  "models" : {
    "SingularityTaskRequest" : {
      "id" : "SingularityTaskRequest",
      "properties" : {
        "request" : {
          "$ref" : "SingularityRequest"
        },
        "deploy" : {
          "$ref" : "SingularityDeploy"
        },
        "pendingTask" : {
          "$ref" : "SingularityPendingTask"
        }
      }
    },
    "MesosTaskStatisticsObject" : {
      "id" : "MesosTaskStatisticsObject",
      "properties" : {
        "cpusLimit" : {
          "type" : "integer",
          "format" : "int32"
        },
        "cpusNrPeriods" : {
          "type" : "integer",
          "format" : "int64"
        },
        "cpusNrThrottled" : {
          "type" : "integer",
          "format" : "int64"
        },
        "cpusSystemTimeSecs" : {
          "type" : "number",
          "format" : "double"
        },
        "cpusThrottledTimeSecs" : {
          "type" : "number",
          "format" : "double"
        },
        "cpusUserTimeSecs" : {
          "type" : "number",
          "format" : "double"
        },
        "memAnonBytes" : {
          "type" : "integer",
          "format" : "int64"
        },
        "memFileBytes" : {
          "type" : "integer",
          "format" : "int64"
        },
        "memLimitBytes" : {
          "type" : "integer",
          "format" : "int64"
        },
        "memMappedFileBytes" : {
          "type" : "integer",
          "format" : "int64"
        },
        "memRssBytes" : {
          "type" : "integer",
          "format" : "int64"
        },
        "timestamp" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "Resources" : {
      "id" : "Resources",
      "properties" : {
        "cpus" : {
          "type" : "number",
          "format" : "double"
        },
        "memoryMb" : {
          "type" : "number",
          "format" : "double"
        },
        "numPorts" : {
          "type" : "integer",
          "format" : "int32"
        },
        "diskMb" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "SingularityTaskShellCommandRequestId" : {
      "id" : "SingularityTaskShellCommandRequestId",
      "properties" : {
        "taskId" : {
          "$ref" : "SingularityTaskId"
        },
        "name" : {
          "type" : "string"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "SingularityShellCommand" : {
      "id" : "SingularityShellCommand",
      "required" : [ "name" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name of the shell command to run"
        },
        "options" : {
          "type" : "array",
          "description" : "Additional options related to the shell command",
          "items" : {
            "type" : "string"
          }
        },
        "user" : {
          "type" : "string",
          "description" : "User who requested the shell command"
        },
        "logfileName" : {
          "type" : "string",
          "description" : "File name for shell command output"
        }
      }
    },
    "SingularityDockerPortMapping" : {
      "id" : "SingularityDockerPortMapping",
      "required" : [ "containerPort", "hostPort" ],
      "properties" : {
        "containerPortType" : {
          "$ref" : "SingularityPortMappingType",
          "description" : "Container port. Use the port number provided (LITERAL) or the dynamically allocated port at this index (FROM_OFFER)",
          "enum" : [ "LITERAL", "FROM_OFFER" ]
        },
        "hostPortType" : {
          "$ref" : "SingularityPortMappingType",
          "description" : "Host port. Use the port number provided (LITERAL) or the dynamically allocated port at this index (FROM_OFFER)",
          "enum" : [ "LITERAL", "FROM_OFFER" ]
        },
        "containerPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Port number, or index of port from offer within the container"
        },
        "hostPort" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Port number, or index of port from offer on the host"
        },
        "protocol" : {
          "type" : "string",
          "description" : "Protocol for binding the port. Default is tcp"
        }
      }
    },
    "SingularityKillTaskRequest" : {
      "id" : "SingularityKillTaskRequest",
      "properties" : {
        "message" : {
          "type" : "string",
          "description" : "A message to show to users about why this action was taken"
        },
        "override" : {
          "type" : "boolean",
          "description" : "If set to true, instructs the executor to attempt to immediately kill the task, rather than waiting gracefully"
        },
        "actionId" : {
          "type" : "string",
          "description" : "An id to associate with this action for metadata purposes"
        },
        "waitForReplacementTask" : {
          "type" : "boolean",
          "description" : "If set to true, treats this task kill as a bounce - launching another task and waiting for it to become healthy"
        },
        "runShellCommandBeforeKill" : {
          "$ref" : "SingularityShellCommand",
          "description" : "Attempt to run this shell command on each task before it is shut down"
        }
      }
    },
    "S3Artifact" : {
      "id" : "S3Artifact",
      "properties" : {
        "s3Bucket" : {
          "type" : "string"
        },
        "s3ObjectKey" : {
          "type" : "string"
        },
        "filesize" : {
          "type" : "integer",
          "format" : "int64"
        },
        "filename" : {
          "type" : "string"
        },
        "md5sum" : {
          "type" : "string"
        },
        "targetFolderRelativeToTask" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "SingularityPendingTaskId" : {
      "id" : "SingularityPendingTaskId",
      "properties" : {
        "requestId" : {
          "type" : "string"
        },
        "deployId" : {
          "type" : "string"
        },
        "nextRunAt" : {
          "type" : "integer",
          "format" : "int64"
        },
        "createdAt" : {
          "type" : "integer",
          "format" : "int64"
        },
        "instanceNo" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pendingType" : {
          "$ref" : "PendingType",
          "enum" : [ "IMMEDIATE", "ONEOFF", "BOUNCE", "NEW_DEPLOY", "NEXT_DEPLOY_STEP", "UNPAUSED", "RETRY", "UPDATED_REQUEST", "DECOMISSIONED_SLAVE_OR_RACK", "TASK_DONE", "STARTUP", "CANCEL_BOUNCE", "TASK_BOUNCE", "DEPLOY_CANCELLED", "DEPLOY_FAILED" ]
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "SingularityTaskCleanup" : {
      "id" : "SingularityTaskCleanup",
      "properties" : {
        "user" : {
          "type" : "string"
        },
        "cleanupType" : {
          "$ref" : "TaskCleanupType",
          "enum" : [ "USER_REQUESTED", "USER_REQUESTED_TASK_BOUNCE", "DECOMISSIONING", "SCALING_DOWN", "BOUNCING", "INCREMENTAL_BOUNCE", "DEPLOY_FAILED", "NEW_DEPLOY_SUCCEEDED", "DEPLOY_STEP_FINISHED", "DEPLOY_CANCELED", "TASK_EXCEEDED_TIME_LIMIT", "UNHEALTHY_NEW_TASK", "OVERDUE_NEW_TASK", "USER_REQUESTED_DESTROY", "INCREMENTAL_DEPLOY_FAILED", "INCREMENTAL_DEPLOY_CANCELLED", "PRIORITY_KILL", "REBALANCE_RACKS", "PAUSING", "PAUSE", "DECOMMISSION_TIMEOUT", "REQUEST_DELETING" ]
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int64"
        },
        "taskId" : {
          "$ref" : "SingularityTaskId"
        },
        "message" : {
          "type" : "string"
        },
        "actionId" : {
          "type" : "string"
        },
        "runBeforeKillId" : {
          "$ref" : "SingularityTaskShellCommandRequestId"
        }
      }
    },
    "SingularityMesosArtifact" : {
      "id" : "SingularityMesosArtifact",
      "properties" : {
        "uri" : {
          "type" : "string"
        },
        "cache" : {
          "type" : "boolean"
        },
        "executable" : {
          "type" : "boolean"
        },
        "extract" : {
          "type" : "boolean"
        }
      }
    },
    "ExecutorData" : {
      "id" : "ExecutorData",
      "required" : [ "cmd" ],
      "properties" : {
        "cmd" : {
          "type" : "string",
          "description" : "Command for the custom executor to run"
        },
        "embeddedArtifacts" : {
          "type" : "array",
          "description" : "A list of the full content of any embedded artifacts",
          "items" : {
            "$ref" : "EmbeddedArtifact"
          }
        },
        "externalArtifacts" : {
          "type" : "array",
          "description" : "A list of external artifacts for the executor to download",
          "items" : {
            "$ref" : "ExternalArtifact"
          }
        },
        "s3Artifacts" : {
          "type" : "array",
          "description" : "List of s3 artifacts for the executor to download",
          "items" : {
            "$ref" : "S3Artifact"
          }
        },
        "successfulExitCodes" : {
          "type" : "array",
          "description" : "Allowable exit codes for the task to be considered FINISHED instead of FAILED",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "runningSentinel" : {
          "type" : "string"
        },
        "user" : {
          "type" : "string",
          "description" : "Run the task process as this user"
        },
        "extraCmdLineArgs" : {
          "type" : "array",
          "description" : "Extra arguments in addition to any provided in the cmd field",
          "items" : {
            "type" : "string"
          }
        },
        "loggingTag" : {
          "type" : "string"
        },
        "loggingExtraFields" : {
          "$ref" : "Map[string,string]"
        },
        "sigKillProcessesAfterMillis" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Send a sigkill to a process if it has not shut down this many millis after being sent a term signal"
        },
        "maxTaskThreads" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Maximum number of threads a task is allowed to use"
        },
        "preserveTaskSandboxAfterFinish" : {
          "type" : "boolean",
          "description" : "If true, do not delete files in the task sandbox after the task process has terminated"
        },
        "maxOpenFiles" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Maximum number of open files the task process is allowed"
        },
        "skipLogrotateAndCompress" : {
          "type" : "boolean",
          "description" : "If true, do not run logrotate or compress old log files"
        },
        "s3ArtifactSignatures" : {
          "type" : "array",
          "description" : "A list of signatures use to verify downloaded s3artifacts",
          "items" : {
            "$ref" : "S3ArtifactSignature"
          }
        },
        "logrotateFrequency" : {
          "$ref" : "SingularityExecutorLogrotateFrequency",
          "description" : "Run logrotate this often. Can be HOURLY, DAILY, WEEKLY, MONTHLY"
        }
      }
    },
    "SingularityDockerParameter" : {
      "id" : "SingularityDockerParameter",
      "properties" : {
        "key" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "SingularityTaskShellCommandRequest" : {
      "id" : "SingularityTaskShellCommandRequest",
      "properties" : {
        "taskId" : {
          "$ref" : "SingularityTaskId"
        },
        "user" : {
          "type" : "string"
        },
        "shellCommand" : {
          "$ref" : "SingularityShellCommand"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "SingularityRequest" : {
      "id" : "SingularityRequest",
      "required" : [ "id", "requestType" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "A unique id for the request"
        },
        "requestType" : {
          "$ref" : "RequestType",
          "description" : "The type of request, can be SERVICE, WORKER, SCHEDULED, ON_DEMAND, or RUN_ONCE",
          "enum" : [ "SERVICE", "WORKER", "SCHEDULED", "ON_DEMAND", "RUN_ONCE" ]
        },
        "owners" : {
          "type" : "array",
          "description" : "A list of emails for the owners of this request",
          "items" : {
            "type" : "string"
          }
        },
        "numRetriesOnFailure" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "For scheduled jobs, retry up to this many times if the job fails"
        },
        "schedule" : {
          "type" : "string",
          "description" : "A schedule in cron, RFC5545, or quartz format"
        },
        "quartzSchedule" : {
          "type" : "string",
          "description" : "A schedule in quartz format"
        },
        "scheduleType" : {
          "$ref" : "ScheduleType",
          "description" : "The type of schedule associated with the scheduled field. Can be CRON, QUARTZ, or RFC5545"
        },
        "scheduleTimeZone" : {
          "type" : "string",
          "description" : "Time zone to use when running the"
        },
        "killOldNonLongRunningTasksAfterMillis" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "For non-long-running request types, kill a task after this amount of time if it has been put into CLEANING and has not shut down"
        },
        "taskExecutionTimeLimitMillis" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "If set, don't allow any taks for this request to run for longer than this amount of time"
        },
        "scheduledExpectedRuntimeMillis" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Expected time for a non-long-running task to run. Singularity will notify owners if a task exceeds this time"
        },
        "waitAtLeastMillisAfterTaskFinishesForReschedule" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "When a scheduled job finishes, wait at least this long before rescheduling it"
        },
        "instances" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "A count of tasks to run for long-running requests"
        },
        "skipHealthchecks" : {
          "type" : "boolean",
          "description" : "If true, do not run healthchecks"
        },
        "rackSensitive" : {
          "type" : "boolean",
          "description" : "Spread instances for this request evenly across separate racks"
        },
        "rackAffinity" : {
          "type" : "array",
          "description" : "If set, prefer this specific rack when launching tasks",
          "items" : {
            "type" : "string"
          }
        },
        "slavePlacement" : {
          "$ref" : "SlavePlacement",
          "description" : "Strategy for determining where to place new tasks. Can be SEPARATE, OPTIMISTIC, GREEDY, SEPARATE_BY_DEPLOY, or SEPARATE_BY_REQUEST"
        },
        "requiredSlaveAttributes" : {
          "$ref" : "Map[string,string]",
          "description" : "Only allow tasks for this request to run on slaves which have these attributes"
        },
        "allowedSlaveAttributes" : {
          "$ref" : "Map[string,string]",
          "description" : "Allow tasks to run on slaves with these attributes, but do not restrict them to only these slaves"
        },
        "loadBalanced" : {
          "type" : "boolean",
          "description" : "Indicates that a SERVICE should be load balanced"
        },
        "group" : {
          "type" : "string",
          "description" : "Auth group associated with this request. Users in this group are allowed read/write access to this request"
        },
        "requiredRole" : {
          "type" : "string",
          "description" : "Mesos Role required for this request. Only offers with the required role will be accepted to execute the tasks associated with the request"
        },
        "readWriteGroups" : {
          "type" : "array",
          "uniqueItems" : true,
          "description" : "Users in these groups are allowed read/write access to this request",
          "items" : {
            "type" : "string"
          }
        },
        "readOnlyGroups" : {
          "type" : "array",
          "uniqueItems" : true,
          "description" : "Users in these groups are allowed read only access to this request",
          "items" : {
            "type" : "string"
          }
        },
        "bounceAfterScale" : {
          "type" : "boolean",
          "description" : "Used for SingularityUI. If true, automatically trigger a bounce after changing the request's instance count"
        },
        "emailConfigurationOverrides" : {
          "$ref" : "Map[SingularityEmailType,List[SingularityEmailDestination]]",
          "description" : "Overrides for email recipients by email type for this request"
        },
        "hideEvenNumberAcrossRacksHint" : {
          "type" : "boolean"
        },
        "taskLogErrorRegex" : {
          "type" : "string",
          "description" : "Searching for errors in task logs to include in emails using this regex"
        },
        "taskLogErrorRegexCaseSensitive" : {
          "type" : "boolean",
          "description" : "Determines if taskLogErrorRegex is case sensitive"
        },
        "taskPriorityLevel" : {
          "type" : "number",
          "format" : "double",
          "description" : "a priority level from 0.0 to 1.0 for all tasks associated with the request"
        },
        "maxTasksPerOffer" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Do not schedule more than this many tasks using a single offer from a single mesos slave"
        },
        "allowBounceToSameHost" : {
          "type" : "boolean",
          "description" : "If set to true, allow tasks to be scheduled on the same host as an existing active task when bouncing"
        }
      }
    },
    "S3ArtifactSignature" : {
      "id" : "S3ArtifactSignature",
      "description" : "A file with name `filename` containing the signature (e.g. gpg signature) for an artifact with the specified `artifactFilename`. Used to verify the validity of the artifact being downloaded",
      "properties" : {
        "artifactFilename" : {
          "type" : "string"
        },
        "s3Bucket" : {
          "type" : "string"
        },
        "s3ObjectKey" : {
          "type" : "string"
        },
        "filesize" : {
          "type" : "integer",
          "format" : "int64"
        },
        "filename" : {
          "type" : "string"
        },
        "md5sum" : {
          "type" : "string"
        },
        "targetFolderRelativeToTask" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "SingularityDeploy" : {
      "id" : "SingularityDeploy",
      "required" : [ "requestId", "id" ],
      "properties" : {
        "requestId" : {
          "type" : "string",
          "description" : "Singularity Request Id which is associated with this deploy."
        },
        "id" : {
          "type" : "string",
          "description" : "Singularity deploy id."
        },
        "version" : {
          "type" : "string",
          "description" : "Deploy version"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Deploy timestamp."
        },
        "metadata" : {
          "$ref" : "Map[string,string]",
          "description" : "Map of metadata key/value pairs associated with the deployment."
        },
        "containerInfo" : {
          "$ref" : "SingularityContainerInfo",
          "description" : "Container information for deployment into a container."
        },
        "customExecutorCmd" : {
          "type" : "string",
          "description" : "Custom Mesos executor"
        },
        "customExecutorId" : {
          "type" : "string",
          "description" : "Custom Mesos executor id."
        },
        "customExecutorSource" : {
          "type" : "string",
          "description" : "Custom Mesos executor source."
        },
        "customExecutorResources" : {
          "$ref" : "com.hubspot.mesos.Resources",
          "description" : "Resources to allocate for custom mesos executor"
        },
        "resources" : {
          "$ref" : "com.hubspot.mesos.Resources",
          "description" : "Resources required for this deploy."
        },
        "command" : {
          "type" : "string",
          "description" : "Command to execute for this deployment."
        },
        "arguments" : {
          "type" : "array",
          "description" : "Command arguments.",
          "items" : {
            "type" : "string"
          }
        },
        "env" : {
          "$ref" : "Map[string,string]",
          "description" : "Map of environment variable definitions."
        },
        "uris" : {
          "type" : "array",
          "description" : "List of URIs to download before executing the deploy command.",
          "items" : {
            "$ref" : "SingularityMesosArtifact"
          }
        },
        "executorData" : {
          "$ref" : "ExecutorData",
          "description" : "Executor specific information"
        },
        "labels" : {
          "$ref" : "Map[string,string]",
          "description" : "Labels for all tasks associated with this deploy"
        },
        "mesosLabels" : {
          "type" : "array",
          "description" : "Labels for all tasks associated with this deploy",
          "items" : {
            "$ref" : "SingularityMesosTaskLabel"
          }
        },
        "taskLabels" : {
          "$ref" : "Map[int,Map[string,string]]",
          "description" : "(Deprecated) Labels for specific tasks associated with this deploy, indexed by instance number"
        },
        "mesosTaskLabels" : {
          "$ref" : "Map[int,List[SingularityMesosTaskLabel]]",
          "description" : "Labels for specific tasks associated with this deploy, indexed by instance number"
        },
        "taskEnv" : {
          "$ref" : "Map[int,Map[string,string]]",
          "description" : "Map of environment variable overrides for specific task instances."
        },
        "healthcheckUri" : {
          "type" : "string",
          "description" : "Deployment Healthcheck URI, if specified will be called after TASK_RUNNING."
        },
        "healthcheckIntervalSeconds" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Time to wait after a failed healthcheck to try again in seconds."
        },
        "healthcheckTimeoutSeconds" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Single healthcheck HTTP timeout in seconds."
        },
        "healthcheckPortIndex" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Perform healthcheck on this dynamically allocated port (e.g. 0 for first port), defaults to first port"
        },
        "healthcheckProtocol" : {
          "$ref" : "com.hubspot.singularity.HealthcheckProtocol",
          "description" : "Healthcheck protocol - HTTP or HTTPS"
        },
        "healthcheckMaxRetries" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Maximum number of times to retry an individual healthcheck before failing the deploy."
        },
        "healthcheckMaxTotalTimeoutSeconds" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Maximum amount of time to wait before failing a deploy for healthchecks to pass."
        },
        "healthcheck" : {
          "$ref" : "HealthcheckOptions",
          "description" : "HTTP Healthcheck settings"
        },
        "skipHealthchecksOnDeploy" : {
          "type" : "boolean",
          "description" : "Allows skipping of health checks when deploying."
        },
        "deployHealthTimeoutSeconds" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Number of seconds that Singularity waits for this service to become healthy (for it to download artifacts, start running, and optionally pass healthchecks.)"
        },
        "considerHealthyAfterRunningForSeconds" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Number of seconds that a service must be healthy to consider the deployment to be successful."
        },
        "serviceBasePath" : {
          "type" : "string",
          "description" : "The base path for the API exposed by the deploy. Used in conjunction with the Load balancer API."
        },
        "loadBalancerGroups" : {
          "type" : "array",
          "uniqueItems" : true,
          "description" : "List of load balancer groups associated with this deployment.",
          "items" : {
            "type" : "string"
          }
        },
        "loadBalancerPortIndex" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Send this port to the load balancer api (e.g. 0 for first port), defaults to first port"
        },
        "loadBalancerOptions" : {
          "$ref" : "Map[string,Object]",
          "description" : "Map (Key/Value) of options for the load balancer."
        },
        "loadBalancerDomains" : {
          "type" : "array",
          "uniqueItems" : true,
          "description" : "List of domains to host this service on, for use with the load balancer api",
          "items" : {
            "type" : "string"
          }
        },
        "loadBalancerAdditionalRoutes" : {
          "type" : "array",
          "description" : "Additional routes besides serviceBasePath used by this service",
          "items" : {
            "type" : "string"
          }
        },
        "loadBalancerTemplate" : {
          "type" : "string",
          "description" : "Name of load balancer template to use if not using the default template"
        },
        "loadBalancerServiceIdOverride" : {
          "type" : "string",
          "description" : "Name of load balancer Service ID to use instead of the Request ID"
        },
        "loadBalancerUpstreamGroup" : {
          "type" : "string",
          "description" : "Group name to tag all upstreams with in load balancer"
        },
        "deployInstanceCountPerStep" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "deploy this many instances at a time"
        },
        "deployStepWaitTimeMs" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "wait this long between deploy steps"
        },
        "autoAdvanceDeploySteps" : {
          "type" : "boolean",
          "description" : "automatically advance to the next target instance count after `deployStepWaitTimeMs` seconds"
        },
        "maxTaskRetries" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "allowed at most this many failed tasks to be retried before failing the deploy"
        },
        "shell" : {
          "type" : "boolean",
          "description" : "Override the shell property on the mesos task"
        },
        "user" : {
          "type" : "string",
          "description" : "Run tasks as this user"
        }
      }
    },
    "SingularityPendingTask" : {
      "id" : "SingularityPendingTask",
      "properties" : {
        "pendingTaskId" : {
          "$ref" : "SingularityPendingTaskId"
        },
        "cmdLineArgsList" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "user" : {
          "type" : "string"
        },
        "runId" : {
          "type" : "string"
        },
        "skipHealthchecks" : {
          "type" : "boolean"
        },
        "message" : {
          "type" : "string"
        },
        "resources" : {
          "$ref" : "Resources"
        },
        "actionId" : {
          "type" : "string"
        }
      }
    },
    "EmbeddedArtifact" : {
      "id" : "EmbeddedArtifact",
      "properties" : {
        "content" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "byte"
          }
        },
        "filename" : {
          "type" : "string"
        },
        "md5sum" : {
          "type" : "string"
        },
        "targetFolderRelativeToTask" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "SingularityTaskId" : {
      "id" : "SingularityTaskId",
      "properties" : {
        "requestId" : {
          "type" : "string"
        },
        "deployId" : {
          "type" : "string"
        },
        "startedAt" : {
          "type" : "integer",
          "format" : "int64"
        },
        "instanceNo" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sanitizedHost" : {
          "type" : "string"
        },
        "sanitizedRackId" : {
          "type" : "string"
        },
        "rackId" : {
          "type" : "string"
        },
        "host" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        }
      }
    },
    "SingularityTask" : {
      "id" : "SingularityTask",
      "properties" : {
        "taskRequest" : {
          "$ref" : "SingularityTaskRequest"
        },
        "rackId" : {
          "type" : "string"
        },
        "taskId" : {
          "$ref" : "SingularityTaskId"
        }
      }
    },
    "ExternalArtifact" : {
      "id" : "ExternalArtifact",
      "properties" : {
        "url" : {
          "type" : "string"
        },
        "filesize" : {
          "type" : "integer",
          "format" : "int64"
        },
        "filename" : {
          "type" : "string"
        },
        "md5sum" : {
          "type" : "string"
        },
        "targetFolderRelativeToTask" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        }
      }
    },
    "SingularityContainerInfo" : {
      "id" : "SingularityContainerInfo",
      "required" : [ "type" ],
      "properties" : {
        "type" : {
          "$ref" : "SingularityContainerType",
          "description" : "Container type, can be MESOS or DOCKER. Default is MESOS",
          "enum" : [ "MESOS", "DOCKER" ]
        },
        "volumes" : {
          "type" : "array",
          "description" : "List of volumes to mount. Applicable only to DOCKER container type",
          "items" : {
            "$ref" : "SingularityVolume"
          }
        },
        "docker" : {
          "$ref" : "SingularityDockerInfo",
          "description" : "Information specific to docker runtime settings"
        }
      }
    },
    "HealthcheckOptions" : {
      "id" : "HealthcheckOptions",
      "required" : [ "uri" ],
      "properties" : {
        "uri" : {
          "type" : "string",
          "description" : "Healthcheck uri to hit"
        },
        "portIndex" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Perform healthcheck on this dynamically allocated port (e.g. 0 for first port), defaults to first port"
        },
        "portNumber" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Perform healthcheck on this port (portIndex cannot also be used when using this setting)"
        },
        "protocol" : {
          "$ref" : "HealthcheckProtocol",
          "description" : "Healthcheck protocol - HTTP or HTTPS"
        },
        "startupTimeoutSeconds" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Consider the task unhealthy/failed if the app has not started responding to healthchecks in this amount of time"
        },
        "startupDelaySeconds" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Wait this long before issuing the first healthcheck"
        },
        "startupIntervalSeconds" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Time to wait after a failed healthcheck to try again in seconds."
        },
        "intervalSeconds" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Time to wait after a valid but failed healthcheck response to try again in seconds."
        },
        "responseTimeoutSeconds" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Single healthcheck HTTP timeout in seconds."
        },
        "maxRetries" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Maximum number of times to retry an individual healthcheck before failing the deploy."
        },
        "failureStatusCodes" : {
          "type" : "array",
          "description" : "Fail the healthcheck with no further retries if one of these status codes is returned",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      }
    },
    "SingularityVolume" : {
      "id" : "SingularityVolume",
      "properties" : {
        "containerPath" : {
          "type" : "string"
        },
        "hostPath" : {
          "type" : "string"
        },
        "mode" : {
          "$ref" : "SingularityDockerVolumeMode"
        }
      }
    },
    "SingularityKilledTaskIdRecord" : {
      "id" : "SingularityKilledTaskIdRecord",
      "properties" : {
        "taskId" : {
          "$ref" : "SingularityTaskId"
        },
        "originalTimestamp" : {
          "type" : "integer",
          "format" : "int64"
        },
        "timestamp" : {
          "type" : "integer",
          "format" : "int64"
        },
        "requestCleanupType" : {
          "$ref" : "RequestCleanupType"
        },
        "taskCleanupType" : {
          "$ref" : "TaskCleanupType"
        },
        "retries" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "SingularityDockerInfo" : {
      "id" : "SingularityDockerInfo",
      "required" : [ "image", "privileged" ],
      "properties" : {
        "image" : {
          "type" : "string",
          "description" : "Docker image name"
        },
        "privileged" : {
          "type" : "boolean",
          "description" : "Controls use of the docker --privleged flag"
        },
        "network" : {
          "$ref" : "com.hubspot.mesos.SingularityDockerNetworkType",
          "description" : "Docker netowkr type. Value can be BRIDGE, HOST, or NONE"
        },
        "portMappings" : {
          "type" : "array",
          "description" : "List of port mappings",
          "items" : {
            "$ref" : "SingularityDockerPortMapping"
          }
        },
        "forcePullImage" : {
          "type" : "boolean",
          "description" : "Always run docker pull even if the image already exists locally"
        },
        "parameters" : {
          "$ref" : "Map[string,string]"
        },
        "dockerParameters" : {
          "type" : "array",
          "description" : "Other docker run command line options to be set",
          "items" : {
            "$ref" : "SingularityDockerParameter"
          }
        }
      }
    },
    "SingularityTaskMetadataRequest" : {
      "id" : "SingularityTaskMetadataRequest",
      "required" : [ "type", "title" ],
      "properties" : {
        "type" : {
          "type" : "string",
          "description" : "A type to be associated with this metadata"
        },
        "title" : {
          "type" : "string",
          "description" : "A title to be associated with this metadata"
        },
        "message" : {
          "type" : "string",
          "description" : "An optional message"
        },
        "level" : {
          "$ref" : "MetadataLevel",
          "description" : "Level of metadata, can be INFO, WARN, or ERROR"
        }
      }
    },
    "SingularityMesosTaskLabel" : {
      "id" : "SingularityMesosTaskLabel",
      "properties" : {
        "key" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    }
  }
}